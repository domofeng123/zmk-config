/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/*
 * 
 * how to flash: 
 * press two key in the bottom, then DOUBLE click left most key, then it will go into boot mod
 *  
 * layer index:
 *
 * start with 0 (this row not used)
 * start with 12, 18
 * start with 24, 30
 * start with 36, 44
 * start with 50
 */

/ {
// this is used to change to caps lock when shift is double clicked
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CLCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp N1    &kp N1 &kp N1   &kp N1   &kp N1    &kp N1                      &kp N1 &kp N1    &kp N1    &kp N1   &kp N1   &kp N1

&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp LC(SPACE) &kp A  &kp S    &kp D    &kp F     &kp G                      &kp H  &kp J     &kp K     &kp L    &mo 3   &kp RET
&td0 &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE  &kp F3   &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &none &kp LCTRL &kp LALT &mo 1  &kp LGUI      &mo 2     &kp SPACE  &kp RALT   &kp RCTRL   &none
            >;
sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;

        };

        layer_1 {
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11

&trans    &kp LBKT   &kp RBKT   &kp LBRC  &kp RBRC   &kp GT                 &kp TILDE &kp AT   &kp POUND      &kp DLLR     &kp N0  &trans
&trans    &kp UNDER  &kp MINUS  &kp LPAR  &kp RPAR   &kp LT                 &kp EXCL  &kp COLON   &kp SEMI    &kp QMARK   &kp FSLH  &trans
&trans    &kp EQUAL  &kp PLUS   &kp SQT   &kp DQT    &kp GRAVE &none  &none   &kp PRCNT &kp CARET   &kp AMPS    &kp STAR    &kp PIPE  &kp BSLH
                      &none     &none    &none       &trans     &none   &none  &trans     &none       &none       &none
            >;
        };

        layer_2 {
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11

&trans    &kp N0  &kp N1  &kp N2  &kp N3  &trans                     &kp LG(R)   &kp LG(LS(LBKT)) &kp LG(LS(RBKT))  &kp LG(LBKT)  &kp LG(RBKT)  &trans
&trans  &kp DOT  &kp N4  &kp N5  &kp N6  &trans                      &kp LG(H)   &mkp LCLK        &mkp MCLK         &mkp RCLK       &kp LG(W)    &trans
&trans  &kp COMMA  &kp N7  &kp N8  &kp N9  &trans  &none     &none   &kp LG(T)   &kp PG_UP        &kp PG_DN         &kp LG(C)     &kp LG(V)    &kp ESC
                   &none   &none   &none   &none   &trans     &none   &none     &none              &none            &none

           >;
        };

        layer_3 {
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11

&trans   &none     &none    &none       &none     &none                 &kp LG(RIGHT)    &kp LA(LEFT)    &kp UP     &kp LA(RIGHT)  &none  &none
&trans   &none     &kp LCTRL  &kp LALT  &kp LGUI  &none                 &kp LG(LEFT)     &kp LEFT        &kp DOWN   &kp RIGHT  &trans  &none
&trans   &kp Z     &kp X     &kp C      &kp V     &kp B &none  &none    &kp LG(A)        &kp LG(X)       &kp LG(C)     &kp LG(V)  &none  &trans
                   &none   &none   &none   &none   &trans     &kp TAB   &kp LS(TAB)      &kp N           &none       &none
           >;
        };

        layer_4 {
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11

&none   &none &none &none &none &none               &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &bt BT_CLR
&none   &none &none &none &none &none               &none        &none        &none        &none        &none         &none
&bootloader   &none &none &none &none &none &none &none &none &none &none &none &none &bootloader 
              &none &none &none &none &none &none &none &none &none &none
           >;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
// this is used for switch between apps
        combo_1 {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&press_gui>;
        };
// this is used for set BLE profile, and delete
        combo_2 {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <50 51>;
            bindings = <&mo 4>;
        };
// this is used for selecting all
        combo_3 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp LG(A)>;
        };
//  command + space: search
        combo_4 {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp LG(SPACE)>;
        };
//  option + space: used to switch input source
//        combo_5 {
//            timeout-ms = <50>;
//            key-positions = <27 28>;
//            bindings = <&kp LC(SPACE)>;
//        };

//  command + N: open new window
        combo_6 {
            timeout-ms = <50>;
            key-positions = <31 33>;
            bindings = <&kp LG(N)>;
        };

//  ctl + alt + Left: move window to left 1/3
        combo_7 {
            timeout-ms = <50>;
            key-positions = <45 46>;
            bindings = <&kp LG(LA(LEFT))>;
        };

//  ctl + alt + down: move window to middle 1/3
        combo_8 {
            timeout-ms = <50>;
            key-positions = <46 47>;
            bindings = <&kp LG(LA(DOWN))>;
        };

//  ctl + alt + right: move window to right 1/3
        combo_9 {
            timeout-ms = <50>;
            key-positions = <47 48>;
            bindings = <&kp LG(LA(RIGHT))>;
        };

//  command + option + left: move window to left 2/3
        combo_10 {
            timeout-ms = <50>;
            key-positions = <45 47>;
            bindings = <&kp LG(LC(LEFT))>;
        };

//  command + option + right: move window to right 2/3
        combo_11 {
            timeout-ms = <50>;
            key-positions = <46 48>;
            bindings = <&kp LG(LC(RIGHT))>;
        };

//  alt + option + left: move window to left 1/2
        combo_12 {
            timeout-ms = <50>;
            key-positions = <45 46 47>;
            bindings = <&kp LC(LA(LEFT))>;
        };

//  alt + option + right: move window to right 1/2
        combo_13 {
            timeout-ms = <50>;
            key-positions = <46 47 48>;
            bindings = <&kp LC(LA(RIGHT))>;
        };


// add more here

    };
};


/ {
    macros {
        press_gui: press_gui {
            label = "ZM_press_gui";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 3 &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &mo 3 &kp LGUI>
                ;
        };
    };
};